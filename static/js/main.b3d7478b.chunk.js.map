{"version":3,"sources":["supabase.js","components/table-cell.js","components/table.js","hooks/use-property-profiles.js","util/constants.js","components/navigation.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","TableCell","props","colHeader","row","component","react_default","a","createElement","accessor","href","url","target","rel","price","toString","replace","columns","Header","table","browsingPropertyType","_usePropertyProfiles","initialState","_useState","useState","_useState2","Object","slicedToArray","profiles","setProfiles","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_getProfiles","asyncToGenerator","regenerator_default","mark","_callee","profilesRequest","wrap","_context","prev","next","client","from","select","sent","data","stop","apply","this","arguments","usePropertyProfiles","_usePropertyProfiles2","getProfiles","sortProperty","setSortProperty","sortDirection","setSortDirection","pageNumber","_useState7","_useState8","filteredProfiles","setFilteredProfiles","_useState9","_useState10","filterByPoa","setFilterByPoa","_useState11","_useState12","filterOutPoa","setFilterOutPoa","_useState13","_useState14","filterByAddress","setFilterByAddress","_useState15","_useState16","filterByMaxPrice","setFilterByMaxPrice","_useState17","_useState18","filterByMinAcres","setFilterByMinAcres","sortClick","useEffect","filtered","filter","p","i","indexOf","find","pr","propertyType","key","address","toLowerCase","acres","sorted","sort","first","second","Fragment","ButtonGroup","variant","aria-label","Button","onClick","TextField","label","onChange","e","value","type","parseInt","length","TableContainer","Paper","Table","sx","minWidth","TableHead","TableRow","map","column","j","TableCell_TableCell","bind","TableBody","name","&:last-child td, &:last-child th","border","k","RESIDENTIAL_SALE","display","RESIDENTIAL_RENT","LAND_SALE","drawerWidth","Main","styled","shouldForwardProp","prop","_ref","theme","open","objectSpread","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","easeOut","enteringScreen","AppBar","MuiAppBar","_ref2","width","DrawerHeader","_ref3","alignItems","mixins","toolbar","justifyContent","PersistentDrawerLeft","useTheme","_React$useState","React","_React$useState2","setOpen","setPropertyType","handleDrawerClose","react","Box","CssBaseline","navigation_AppBar","position","Toolbar","IconButton","color","edge","mr","Menu_default","Typography","noWrap","Drawer","flexShrink","& .MuiDrawer-paper","boxSizing","anchor","direction","ChevronLeft_default","ChevronRight_default","Divider","List","index","ListItem","button","ListItemText","primary","children","App","className","style","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b3d7478b.chunk.js","sourcesContent":["import {createClient} from '@supabase/supabase-js';\nconst anonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMjU3NTg5OCwiZXhwIjoxOTQ4MTUxODk4fQ.PCd4jiJmZkLrMeA3qg6ry8Ocl1iAf1HjdcNFtpGZSzI\";\n\nconst supabase = createClient(\"https://fvmqujwsitkcejuauyqf.supabase.co\", anonKey);\n\n\n\nexport default supabase;","import React from 'react';\n\nexport default function TableCell(props){\n    const {colHeader, row} = props;\n    const AddressRow = ()=>(<a href={row.url} target=\"_blank\" rel=\"noopener noreferrer\">{row[colHeader.accessor]}</a>);\n    const DefaultRow = ()=>(<p>{row[colHeader.accessor]}</p>);\n    const PriceRow = ()=>{\n        function numberWithCommas(x) { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); }\n        const price = row[colHeader.accessor];\n        return (<p>{price ? numberWithCommas(price): \"\"}</p>)\n    }\n    // const ImageRow = ()=>row[colHeader.accessor].length>0 ? (<img style={{height:\"80px\"}} src={row[colHeader.accessor][0]}/>) : \"\";\n    let component = DefaultRow;\n    if(colHeader.accessor===\"address\") component=AddressRow;\n    if(colHeader.accessor===\"price\" || colHeader.accessor===\"pricePerAcre\") component=PriceRow;\n    // if(colHeader.accessor===\"pictures\") component=ImageRow;\n    return (\n        <td>\n            {component()}\n            \n        </td>\n    )\n}","\nimport React, {useEffect, useState} from \"react\";\nimport usePropertyProfiles from \"../hooks/use-property-profiles\";\nimport TableCell from \"./table-cell\";\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport TextField from '@mui/material/TextField';\n\n\nimport MaterialTable from '@mui/material/Table';\nimport MaterialTableBody from '@mui/material/TableBody';\nimport MaterialTableCell from '@mui/material/TableCell';\nimport MaterialTableContainer from '@mui/material/TableContainer';\nimport MaterialTableHead from '@mui/material/TableHead';\nimport MaterialTableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst columns = [\n    {\n      Header: \"Address\",\n      accessor: \"address\",\n    },\n    {\n      Header: \"Acres\",\n      accessor: \"acres\",\n    },\n    {\n      Header: \"Price\",\n      accessor: \"price\",\n    },\n    {\n      Header: \"Price Per Acre\",\n      accessor: \"pricePerAcre\",\n    },\n    // {\n    //     Header: \"Image\",\n    //     accessor: \"pictures\"\n    // }\n  ];\n\n  \nconst PAGE_SIZE=10;\nexport default function table(props){\n    const {browsingPropertyType} = props;\n    const [profiles, isLoading, error, getProfiles] = usePropertyProfiles([]);\n    const [sortProperty, setSortProperty] = useState(\"pricePerAcre\");\n    const [sortDirection, setSortDirection] = useState(-1);//-1 is descending\n    const [pageNumber, setPageNumber] = useState(1);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    const [filterByPoa, setFilterByPoa] = useState(false);\n    const [filterOutPoa, setFilterOutPoa] = useState(false);\n    const [filterByAddress, setFilterByAddress] = useState(\"\");\n    const [filterByMaxPrice, setFilterByMaxPrice] = useState(0);\n    const [filterByMinAcres, setFilterByMinAcres] = useState(0);\n    useEffect(()=>{\n        //sort profiles, then setFilteredProfiles\n        const sortFn = (first, second)=>{\n            if(first[sortProperty]===second[sortProperty])return 0;\n            if(!first[sortProperty])return 1;\n            if(!second[sortProperty])return -1;\n            return first[sortProperty] > second[sortProperty] ? 1*sortDirection : -1*sortDirection;\n        };\n        // const paged = sorted.slice(0, pageNumber*PAGE_SIZE);\n        let filtered = profiles.filter((p,i)=>profiles.indexOf(profiles.find(pr=>pr.url===p.url))===i); //dedupe\n        if(browsingPropertyType)filtered=filtered.filter(p=>p.propertyType==browsingPropertyType.key);\n        if(filterByPoa)filtered=filtered.filter(p=>!p.price);// filters out anything with a price, remaining is POA\n        if(filterOutPoa)filtered=filtered.filter(p=>!!p.price);\n        if(filterByAddress)filtered=filtered.filter(p=>!!p.address && p.address.toLowerCase().indexOf(filterByAddress.toLowerCase())>-1);\n        if(filterByMaxPrice)filtered=filtered.filter(p=>!p.price || p.price<=filterByMaxPrice);\n        if(filterByMinAcres)filtered=filtered.filter(p=>p.acres && p.acres >= filterByMinAcres);\n        const sorted = filtered.sort(sortFn);\n        setFilteredProfiles(sorted);\n    }, [profiles, sortProperty, sortDirection, pageNumber, filterByPoa,filterByAddress,filterByMaxPrice,filterOutPoa,filterByMinAcres,browsingPropertyType]);\n    useEffect(() => {\n        getProfiles();\n    }, []);\n    function sortClick(){\n        if(sortProperty!==this)return setSortProperty(this) && setSortDirection(-1);\n        setSortDirection(sortDirection*-1);\n    }\n    function filterByPoaClick(){\n        setFilterByPoa(!filterByPoa);\n    }\n    function filterOutPoaClick(){\n        setFilterOutPoa(!filterOutPoa);\n    }\n    function addressSearchChange(e){\n        const value = e.target.value.replace('bt', '')\n        setFilterByAddress(\"bt\"+value);\n    }\n    function maxPriceChange(e){\n        setFilterByMaxPrice(parseInt(e.target.value));\n    }\n    function minAcresChange(e){\n        setFilterByMinAcres(parseInt(e.target.value));\n    }\n    return (\n        <>\n        <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n          <Button variant=\"contained\" onClick={filterByPoaClick}>{filterByPoa ? \"filtering by poa\" : \"filter by poa\"}</Button>\n          <Button variant=\"contained\" onClick={filterOutPoaClick}>{filterOutPoa ? \"filtering Out poa\" : \"filter Out poa\"}</Button>\n        </ButtonGroup>\n        <TextField label=\"BT search, just type number\" variant=\"filled\" onChange={addressSearchChange} />\n        <TextField label=\"max price\" variant=\"filled\" type=\"number\" onChange={maxPriceChange} />\n        <TextField label=\"min acres\" variant=\"filled\" type=\"number\" onChange={minAcresChange} />\n        <p>Total Results: {filteredProfiles.length}</p>\n        <MaterialTableContainer component={Paper}>\n          <MaterialTable sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <MaterialTableHead>\n              <MaterialTableRow>\n                {columns.map((column, j) => (\n                  <MaterialTableCell key={j} onClick={sortClick.bind(column.accessor)}>{column[\"Header\"]}</MaterialTableCell>\n                ))}\n              </MaterialTableRow>\n            </MaterialTableHead>\n            <MaterialTableBody>\n            {filteredProfiles.map((row, i) => {\n                return (\n                  <MaterialTableRow\n                    key={row.name}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    {columns.map((colHeader, k)=><MaterialTableCell><TableCell key={k} colHeader={colHeader} row={row}></TableCell></MaterialTableCell>)}\n                  </MaterialTableRow>\n                );\n            })}\n            </MaterialTableBody>\n          </MaterialTable>\n        </MaterialTableContainer>\n        \n    </>\n  );\n}\n\n// <table>\n//         {isLoading ? (<h1>Loading..</h1>) : \"\"}\n//       <thead>\n//           <tr>\n//             {columns.map((column, j) => (\n//               <th key={j} onClick={sortClick.bind(column.accessor)}>{column[\"Header\"]}</th>\n//             ))}\n//           </tr>\n//       </thead>\n//       <tbody>\n//         {filteredProfiles.map((row, i) => {\n//             return (\n//                 <tr key={i}>\n//                     {columns.map((colHeader, k)=><TableCell key={k} colHeader={colHeader} row={row}></TableCell>)}\n//                 </tr>\n//             );\n//         })}\n//       </tbody>\n//     </table>","\nimport client from \"../supabase\";\nimport react, {useState} from \"react\";\n\nexport default function usePropertyProfiles(initialState){\n    const [profiles, setProfiles] = useState(initialState);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    function supabaseGetProfiles(){\n        return client.from(\"land\").select();\n    }\n\n    async function getProfiles(){\n        setIsLoading(true);\n        setError(null);\n        const profilesRequest = await supabaseGetProfiles();\n        if(profilesRequest.data){\n            setProfiles(profilesRequest.data);\n        } else {\n            setError(profilesRequest.error);\n        }\n        setIsLoading(false);\n    }\n\n    return [profiles, isLoading, error, getProfiles]\n}","export const RESIDENTIAL_SALE = {display: \"Residential Sales\", key: \"property-for-sale\"};\nexport const RESIDENTIAL_RENT = {display: \"Residential Rentals\", key: \"property-for-rent\"};\nexport const LAND_SALE = {display: \"Land Sales\", key:\"land-for-sale\"};","import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport {RESIDENTIAL_SALE, RESIDENTIAL_RENT, LAND_SALE} from \"../util/constants\";\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const {setPropertyType} = props;\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Property Search\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {[RESIDENTIAL_SALE, RESIDENTIAL_RENT, LAND_SALE].map((propertyType, index) => (\n            <ListItem button key={propertyType.display} onClick={()=>{setPropertyType(propertyType);handleDrawerClose();}}>\n              <ListItemText primary={propertyType.display} />\n            </ListItem>\n          ))}\n        </List>\n        \n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        {props.children}\n      </Main>\n    </Box>\n  );\n};\n\n/**\n * <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n */","import Table from './components/table';\nimport PersistentDrawerLeft from './components/navigation';\nimport React, {useState} from \"react\";\nimport './App.css';\nimport {RESIDENTIAL_SALE, RESIDENTIAL_RENT, LAND_SALE} from \"./util/constants\";\n\nfunction App() {\n  const [browsingPropertyType, setPropertyType] = useState(RESIDENTIAL_SALE);\n  return (\n    <div className=\"App\">\n      <PersistentDrawerLeft setPropertyType={setPropertyType}>\n        <header className=\"App-header\">\n          <h1>Searching: {browsingPropertyType.display}</h1>\n        </header>\n        <div style={{padding:`${30}px`}}>\n          <Table browsingPropertyType={browsingPropertyType}></Table>\n        </div>\n      </PersistentDrawerLeft>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}