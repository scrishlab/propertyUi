{"version":3,"sources":["supabase.js","components/table-cell.js","components/table.js","hooks/use-property-profiles.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","TableCell","props","colHeader","row","component","react_default","a","createElement","accessor","href","url","target","rel","price","toString","replace","columns","Header","table","_usePropertyProfiles","initialState","_useState","useState","_useState2","Object","slicedToArray","profiles","setProfiles","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_getProfiles","asyncToGenerator","regenerator_default","mark","_callee","profilesRequest","wrap","_context","prev","next","client","from","select","sent","data","stop","apply","this","arguments","usePropertyProfiles","_usePropertyProfiles2","getProfiles","sortProperty","setSortProperty","sortDirection","setSortDirection","pageNumber","_useState7","_useState8","filteredProfiles","setFilteredProfiles","_useState9","_useState10","filterByPoa","setFilterByPoa","_useState11","_useState12","filterOutPoa","setFilterOutPoa","_useState13","_useState14","filterByAddress","setFilterByAddress","_useState15","_useState16","filterByMaxPrice","setFilterByMaxPrice","_useState17","_useState18","filterByMinAcres","setFilterByMinAcres","sortClick","useEffect","filtered","filter","p","i","indexOf","find","pr","address","toLowerCase","acres","sorted","sort","first","second","Fragment","ButtonGroup","variant","aria-label","Button","onClick","TextField","label","onChange","e","value","type","parseInt","length","TableContainer","Paper","Table","sx","minWidth","TableHead","TableRow","map","column","j","TableCell_TableCell","key","bind","TableBody","name","&:last-child td, &:last-child th","border","k","App","className","style","padding","concat","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d63a4d8.chunk.js","sourcesContent":["import {createClient} from '@supabase/supabase-js';\nconst anonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMjU3NTg5OCwiZXhwIjoxOTQ4MTUxODk4fQ.PCd4jiJmZkLrMeA3qg6ry8Ocl1iAf1HjdcNFtpGZSzI\";\n\nconst supabase = createClient(\"https://fvmqujwsitkcejuauyqf.supabase.co\", anonKey);\n\n\n\nexport default supabase;","import React from 'react';\n\nexport default function TableCell(props){\n    const {colHeader, row} = props;\n    const AddressRow = ()=>(<a href={row.url} target=\"_blank\" rel=\"noopener noreferrer\">{row[colHeader.accessor]}</a>);\n    const DefaultRow = ()=>(<p>{row[colHeader.accessor]}</p>);\n    const PriceRow = ()=>{\n        function numberWithCommas(x) { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); }\n        const price = row[colHeader.accessor];\n        return (<p>{price ? numberWithCommas(price): \"\"}</p>)\n    }\n    // const ImageRow = ()=>row[colHeader.accessor].length>0 ? (<img style={{height:\"80px\"}} src={row[colHeader.accessor][0]}/>) : \"\";\n    let component = DefaultRow;\n    if(colHeader.accessor===\"address\") component=AddressRow;\n    if(colHeader.accessor===\"price\" || colHeader.accessor===\"pricePerAcre\") component=PriceRow;\n    // if(colHeader.accessor===\"pictures\") component=ImageRow;\n    return (\n        <td>\n            {component()}\n            \n        </td>\n    )\n}","\nimport React, {useEffect, useState} from \"react\";\nimport usePropertyProfiles from \"../hooks/use-property-profiles\";\nimport TableCell from \"./table-cell\";\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport TextField from '@mui/material/TextField';\n\n\nimport MaterialTable from '@mui/material/Table';\nimport MaterialTableBody from '@mui/material/TableBody';\nimport MaterialTableCell from '@mui/material/TableCell';\nimport MaterialTableContainer from '@mui/material/TableContainer';\nimport MaterialTableHead from '@mui/material/TableHead';\nimport MaterialTableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst columns = [\n    {\n      Header: \"Address\",\n      accessor: \"address\",\n    },\n    {\n      Header: \"Acres\",\n      accessor: \"acres\",\n    },\n    {\n      Header: \"Price\",\n      accessor: \"price\",\n    },\n    {\n      Header: \"Price Per Acre\",\n      accessor: \"pricePerAcre\",\n    },\n    // {\n    //     Header: \"Image\",\n    //     accessor: \"pictures\"\n    // }\n  ];\n\n  \nconst PAGE_SIZE=10;\nexport default function table(){\n    const [profiles, isLoading, error, getProfiles] = usePropertyProfiles([]);\n    const [sortProperty, setSortProperty] = useState(\"pricePerAcre\");\n    const [sortDirection, setSortDirection] = useState(-1);//-1 is descending\n    const [pageNumber, setPageNumber] = useState(1);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    const [filterByPoa, setFilterByPoa] = useState(false);\n    const [filterOutPoa, setFilterOutPoa] = useState(false);\n    const [filterByAddress, setFilterByAddress] = useState(\"\");\n    const [filterByMaxPrice, setFilterByMaxPrice] = useState(0);\n    const [filterByMinAcres, setFilterByMinAcres] = useState(0);\n    useEffect(()=>{\n        //sort profiles, then setFilteredProfiles\n        const sortFn = (first, second)=>{\n            if(first[sortProperty]===second[sortProperty])return 0;\n            if(!first[sortProperty])return 1;\n            if(!second[sortProperty])return -1;\n            return first[sortProperty] > second[sortProperty] ? 1*sortDirection : -1*sortDirection;\n        };\n        // const paged = sorted.slice(0, pageNumber*PAGE_SIZE);\n        let filtered = profiles.filter((p,i)=>profiles.indexOf(profiles.find(pr=>pr.url===p.url))===i); //dedupe\n        if(filterByPoa)filtered=filtered.filter(p=>!p.price);// filters out anything with a price, remaining is POA\n        if(filterOutPoa)filtered=filtered.filter(p=>!!p.price);\n        if(filterByAddress)filtered=filtered.filter(p=>p.address.toLowerCase().indexOf(filterByAddress.toLowerCase())>-1);\n        if(filterByMaxPrice)filtered=filtered.filter(p=>!p.price || p.price<=filterByMaxPrice);\n        if(filterByMinAcres)filtered=filtered.filter(p=>p.acres && p.acres >= filterByMinAcres);\n        const sorted = filtered.sort(sortFn);\n        setFilteredProfiles(sorted);\n    }, [profiles, sortProperty, sortDirection, pageNumber, filterByPoa,filterByAddress,filterByMaxPrice,filterOutPoa,filterByMinAcres]);\n    useEffect(() => {\n        getProfiles();\n    }, []);\n    function sortClick(){\n        if(sortProperty!==this)return setSortProperty(this) && setSortDirection(-1);\n        setSortDirection(sortDirection*-1);\n    }\n    function filterByPoaClick(){\n        setFilterByPoa(!filterByPoa);\n    }\n    function filterOutPoaClick(){\n        setFilterOutPoa(!filterOutPoa);\n    }\n    function addressSearchChange(e){\n        const value = e.target.value.replace('bt', '')\n        setFilterByAddress(\"bt\"+value);\n    }\n    function maxPriceChange(e){\n        setFilterByMaxPrice(parseInt(e.target.value));\n    }\n    function minAcresChange(e){\n        setFilterByMinAcres(parseInt(e.target.value));\n    }\n    return (\n        <>\n        <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n          <Button variant=\"contained\" onClick={filterByPoaClick}>{filterByPoa ? \"filtering by poa\" : \"filter by poa\"}</Button>\n          <Button variant=\"contained\" onClick={filterOutPoaClick}>{filterOutPoa ? \"filtering Out poa\" : \"filter Out poa\"}</Button>\n        </ButtonGroup>\n        <TextField label=\"BT search, just type number\" variant=\"filled\" onChange={addressSearchChange} />\n        <TextField label=\"max price\" variant=\"filled\" type=\"number\" onChange={maxPriceChange} />\n        <TextField label=\"min acres\" variant=\"filled\" type=\"number\" onChange={minAcresChange} />\n        <p>Total Results: {filteredProfiles.length}</p>\n        <MaterialTableContainer component={Paper}>\n          <MaterialTable sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <MaterialTableHead>\n              <MaterialTableRow>\n                {columns.map((column, j) => (\n                  <MaterialTableCell key={j} onClick={sortClick.bind(column.accessor)}>{column[\"Header\"]}</MaterialTableCell>\n                ))}\n              </MaterialTableRow>\n            </MaterialTableHead>\n            <MaterialTableBody>\n            {filteredProfiles.map((row, i) => {\n                return (\n                  <MaterialTableRow\n                    key={row.name}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    {columns.map((colHeader, k)=><MaterialTableCell><TableCell key={k} colHeader={colHeader} row={row}></TableCell></MaterialTableCell>)}\n                  </MaterialTableRow>\n                );\n            })}\n            </MaterialTableBody>\n          </MaterialTable>\n        </MaterialTableContainer>\n        \n    </>\n  );\n}\n\n// <table>\n//         {isLoading ? (<h1>Loading..</h1>) : \"\"}\n//       <thead>\n//           <tr>\n//             {columns.map((column, j) => (\n//               <th key={j} onClick={sortClick.bind(column.accessor)}>{column[\"Header\"]}</th>\n//             ))}\n//           </tr>\n//       </thead>\n//       <tbody>\n//         {filteredProfiles.map((row, i) => {\n//             return (\n//                 <tr key={i}>\n//                     {columns.map((colHeader, k)=><TableCell key={k} colHeader={colHeader} row={row}></TableCell>)}\n//                 </tr>\n//             );\n//         })}\n//       </tbody>\n//     </table>","\nimport client from \"../supabase\";\nimport react, {useState} from \"react\";\n\nexport default function usePropertyProfiles(initialState){\n    const [profiles, setProfiles] = useState(initialState);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    function supabaseGetProfiles(){\n        return client.from(\"land\").select();\n    }\n\n    async function getProfiles(){\n        setIsLoading(true);\n        setError(null);\n        const profilesRequest = await supabaseGetProfiles();\n        if(profilesRequest.data){\n            setProfiles(profilesRequest.data);\n        } else {\n            setError(profilesRequest.error);\n        }\n        setIsLoading(false);\n    }\n\n    return [profiles, isLoading, error, getProfiles]\n}","import Table from './components/table';\nimport React from \"react\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Property Search</h1>\n      </header>\n      <div style={{padding:`${30}px`}}>\n        <Table></Table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}