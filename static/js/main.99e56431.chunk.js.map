{"version":3,"sources":["logo.svg","supabase.js","components/table.js","hooks/use-property-profiles.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","supabase","createClient","columns","Header","accessor","table","_usePropertyProfiles","initialState","_useState","useState","_useState2","Object","slicedToArray","profiles","setProfiles","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_getProfiles","asyncToGenerator","regenerator_default","a","mark","_callee","profilesRequest","wrap","_context","prev","next","client","from","select","sent","data","stop","apply","this","arguments","usePropertyProfiles","_usePropertyProfiles2","getProfiles","useEffect","react_default","createElement","map","column","j","key","row","i","colHeader","k","App","className","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6LCOzBC,EAJEC,YAAa,2CAFd,uJCGhB,IAAMC,EAAU,CACZ,CACEC,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,QACRC,SAAU,UAMD,SAASC,IAAO,IAAAC,ECjBhB,SAA6BC,GAAa,IAAAC,EACrBC,mBAASF,GADYG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9CK,EAD8CH,EAAA,GACpCI,EADoCJ,EAAA,GAAAK,EAEnBN,oBAAS,GAFUO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE9CE,EAF8CD,EAAA,GAEnCE,EAFmCF,EAAA,GAAAG,EAG3BV,mBAAS,MAHkBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAG9CE,EAH8CD,EAAA,GAGvCE,EAHuCF,EAAA,YAAAG,IAAA,OAAAA,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAUrD,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGIf,GAAa,GACbI,EAAS,MAJbS,EAAAE,KAAA,EAHWC,EAAOC,KAAK,QAAQC,SAG/B,QAKUP,EALVE,EAAAM,MAMuBC,KACfxB,EAAYe,EAAgBS,MAE5BhB,EAASO,EAAgBR,OAE7BH,GAAa,GAXjB,wBAAAa,EAAAQ,SAAAX,OAVqDY,MAAAC,KAAAC,WAwBrD,MAAO,CAAC7B,EAAUI,EAAWI,EAxBwB,kBAAAE,EAAAiB,MAAAC,KAAAC,aDkBHC,CAAoB,IAD3CC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACpBO,EADoB+B,EAAA,GACQC,GADRD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAM3B,OAJEE,oBAAU,WACRD,KACC,IAGDE,EAAArB,EAAAsB,cAAA,aACFD,EAAArB,EAAAsB,cAAA,aACID,EAAArB,EAAAsB,cAAA,UACG9C,EAAQ+C,IAAI,SAACC,EAAQC,GAAT,OACXJ,EAAArB,EAAAsB,cAAA,MAAII,IAAKD,GAAID,EAAM,YAI3BH,EAAArB,EAAAsB,cAAA,aACGnC,EAASoC,IAAI,SAACI,EAAKC,GAChB,OACIP,EAAArB,EAAAsB,cAAA,MAAII,IAAKE,GACJpD,EAAQ+C,IAAI,SAACM,EAAWC,GAAZ,OAAgBT,EAAArB,EAAAsB,cAAA,MAAII,IAAKI,GAAIH,EAAIE,EAAUnD,wBEzB7DqD,MAVf,WACE,OACEV,EAAArB,EAAAsB,cAAA,OAAKU,UAAU,OACbX,EAAArB,EAAAsB,cAAA,UAAQU,UAAU,cAChBX,EAAArB,EAAAsB,cAAC3C,EAAD,SCGOsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC/D,EAAAgE,EAAA,GAAAC,KAAAjE,EAAAkE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPzB,EAAArB,EAAAsB,cAACD,EAAArB,EAAM+C,WAAP,KACE1B,EAAArB,EAAAsB,cAAC0B,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.99e56431.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import {createClient} from '@supabase/supabase-js';\r\nconst anonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMjU3NTg5OCwiZXhwIjoxOTQ4MTUxODk4fQ.PCd4jiJmZkLrMeA3qg6ry8Ocl1iAf1HjdcNFtpGZSzI\";\r\n\r\nconst supabase = createClient(\"https://fvmqujwsitkcejuauyqf.supabase.co\", anonKey);\r\n\r\n\r\n\r\nexport default supabase;","\r\nimport React, {useEffect} from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport usePropertyProfiles from \"../hooks/use-property-profiles\";\r\nconst columns = [\r\n    {\r\n      Header: \"Address\",\r\n      accessor: \"address\",\r\n    },\r\n    {\r\n      Header: \"Acres\",\r\n      accessor: \"acres\",\r\n    },\r\n    {\r\n      Header: \"Price\",\r\n      accessor: \"price\",\r\n    },\r\n  ];\r\n\r\n  \r\n\r\nexport default function table(){\r\n    const [profiles, isLoading, error, getProfiles] = usePropertyProfiles([]);\r\n      useEffect(() => {\r\n        getProfiles();\r\n      }, []);\r\n      debugger;\r\n    return (\r\n        <table>\r\n      <thead>\r\n          <tr>\r\n            {columns.map((column, j) => (\r\n              <th key={j}>{column[\"Header\"]}</th>\r\n            ))}\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n        {profiles.map((row, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    {columns.map((colHeader, k)=><td key={k}>{row[colHeader.accessor]}</td>)}\r\n                </tr>\r\n            );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}","\r\nimport client from \"../supabase\";\r\nimport react, {useState} from \"react\";\r\n\r\nexport default function usePropertyProfiles(initialState){\r\n    const [profiles, setProfiles] = useState(initialState);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    debugger;\r\n    function supabaseGetProfiles(){\r\n        return client.from(\"land\").select();\r\n    }\r\n\r\n    async function getProfiles(){\r\n        \r\n      debugger;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const profilesRequest = await supabaseGetProfiles();\r\n        if(profilesRequest.data){\r\n            setProfiles(profilesRequest.data);\r\n        } else {\r\n            setError(profilesRequest.error);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return [profiles, isLoading, error, getProfiles]\r\n}","import logo from './logo.svg';\nimport Table from './components/table';\nimport React from \"react\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Table></Table>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}